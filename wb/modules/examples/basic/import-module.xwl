{"hidden":false,"children":[{"configs":{"serverScript":"//注：serverScript在importModules之后运行，initScript在importModules之前运行\n//app.execute('m?xwl=examples/basic/import-module/imported-module');在后台调用imported-module模块\nrequest.setAttribute('addedVal', Integer.toString(app.add(3, 5))); //app.add方法在子模块imported-module的serverScript内定义","itemId":"module","importModules":"[\"m?xwl=examples/basic/import-module/imported-module\"]","description":"引用模块有以下5种方法：\n1、设置模块的importModules属性（可以直接拖动模块到该属性），可以通过app.importXwlI(i为索引号）来访问导入模块的命名空间\n2、添加server->xwl控件并设置file属性，可以通过app.xwl1(xwl1为控件的itemId）来访问导入模块的命名空间\n3、通过Wb.run/Wb.open方法来引用模块。使用该方法引用的模块在主模块销毁时不会自动销毁被引用的模块，可以使用如下方法销毁：\nWb.run({url:module,success:function(scope){\n  app.myScope=scope;//myScope可为任意名称。把引用的模块命名空间scope注册到主模块的命名空间app，通过该方法在主模块销毁时自动销毁引用的模块\n}});\n4、在ServerScript中使用app.execute/Wb.execute方法，详见API中对这两个方法的描述说明和区别\n5、在Java中使用WbUtil.run/WbUtil.invoke方法，详见API中对这两个方法的描述说明和区别"},"expanded":true,"children":[{"configs":{"itemId":"xwl1","file":"m?xwl=examples/basic/import-module/control-module","description":"使用xwl控件引用的模块会在主模块销毁时自动销毁"},"expanded":false,"children":[],"type":"xwl"},{"configs":{"layout":"absolute","itemId":"window1","width":"392","title":"该窗口关闭时隐藏","height":"240"},"expanded":false,"children":[],"type":"window"},{"configs":{"layout":"border","itemId":"viewport1"},"expanded":true,"children":[{"configs":{"itemId":"toolbar1","region":"north"},"expanded":true,"children":[{"configs":{"itemId":"dynamicInvoke","text":"动态加载非单例窗口"},"expanded":false,"children":[],"type":"item","events":{"click":"Wb.run({\n  url: 'm?xwl=examples/basic/import-module/dynamic-invoke',\n  success: function(scope) {\n    scope.window1.show();\n    //window1的closeAction设置为destroy,window1关闭时仅销毁window1本身，window1所在的模块不会销毁，\n    //如果该模块还存在需要销毁的其他资源，那么可以在window1的destroy事件中添加代码：Wb.destroy(app, app.window1);来销毁整个模块\n    //此例dynamic-invoke模块仅包含window1本身，因此不需要销毁整个模块\n  }\n});"}},{"configs":{"itemId":"dynamicInvokeSingle","text":"动态加载单例窗口"},"expanded":false,"children":[],"type":"item","events":{"click":"Wb.run({\n  url: 'm?xwl=examples/basic/import-module/dynamic-invoke-single',\n  single: true, //单例模式，在第2次运行时系统不重新运行dynamic-invoke-single模块，而是直接访问上次的对象，该对象的生命周期同整个页面\n  success: function(scope) {\n    scope.window1.show(); //window1的closeAction默认为hide，关闭时仅隐藏\n  }\n});"}},{"configs":{"itemId":"openXwlWin","text":"打开xwl控件引用的窗口"},"expanded":false,"children":[],"type":"item","events":{"click":"app.xwl1.window1.show(); //窗口在主模块销毁时自动销毁"}},{"configs":{"itemId":"openWin","text":"显示模块内的窗口"},"expanded":false,"children":[],"type":"item","events":{"click":"app.window1.show(); //该窗口时关闭时默认为隐藏\n//如果不希望窗口在模块关闭时销毁，可以把window1的引用从app中删除\n//delete app.window1; delete app._window1;//删除引用，使窗口不在模块关闭时销毁\n//如果窗口的createInstance属性设置为false，app.window1指向实例，app._window1指定配置对象"}},{"configs":{"itemId":"addXwlPage","text":"添加xwl控件引用的页"},"expanded":false,"children":[],"type":"item","events":{"click":"var card, cardConfig = app.xwl1._panel1; //_panel1指向配置对象, panel1在创建实例后指向实例\nif (!app.cardIndex)\n  app.cardIndex = 1;\nWb.apply(cardConfig, {\n  itemId: Wb.getId(), //也可以根据业务规则标识itemId，以方便查找指定card\n  title: 'Card' + (app.cardIndex++),\n  closable: true\n});\ncard = app.tab1.add(cardConfig);\napp.tab1.setActiveTab(card);"}}],"type":"toolbar"},{"configs":{"itemId":"tab1","region":"center"},"expanded":true,"children":[{"configs":{"itemId":"xwl_page","file":"m?xwl=examples/basic/import-module/as-sub-control"},"expanded":false,"children":[],"type":"xwl"}],"type":"tab"}],"type":"viewport"}],"type":"module","events":{"initialize":"var minusVal = app.importXwl1.minus(7, 5); //minus方法在子模块imported-module的initialize内定义\nWb.tip({\n  html: '通过服务端引用方法计算得到：{#addedVal#}<br>通过客户端引用方法计算得到：' + minusVal,\n  width: 230\n});"}}],"roles":{"demo":1},"title":"引用模块","iconCls":"","inframe":false,"pageLink":""}